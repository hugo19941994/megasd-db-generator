name: Generate XML

on: [push]

jobs:
    build:
        runs-on: ubuntu-latest

        strategy:
            matrix:
                python-version: [3.8]

        steps:
        - uses: actions/checkout@v1
        - uses: actions/setup-python@v1
        - uses: dschep/install-pipenv-action@v1
        - run: pipenv install --deploy --system
        - run: python3 dat-downloader.py
        - run: python3 igdb-downloader.py
          env:
              IGDB_API_KEY: ${{ secrets.IGDB_API_KEY }}
        - run: python3 xml_builder.py
        - run: echo "::set-env name=DATE::$(date '+%Y-%m-%d')"
        - uses: pCYSl5EDgo/cat@master
          id: releaseText
          with:
              path: release.md
        - name: Create Release
          id: create_release
          uses: actions/create-release@master
          env:
              GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
          with:
              tag_name: ${{ github.ref }}
              release_name: DB ${{env.DATE}}
              body: ${{ steps.releaseText.outputs.text }}
              draft: true
              prerelease: true
        - name: Upload Release Asset
          id: upload-release-asset 
          uses: actions/upload-release-asset@v1.0.1
          env:
              GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          with:
              upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
              asset_path: ./DB_${{env.DATE}}.zip
              asset_name: DB_${{env.DATE}}.zip
              asset_content_type: application/zip

